// FILE: benchmarks/src/tenge/yield_curve_cli.tng
// Purpose: Yield curve modeling benchmark for central bank applications
// Implements Nelson-Siegel model for yield curve fitting

fn main() {
    let n_points = argi(1);
    if (n_points <= 0) { n_points = 1000; }
    
    // Nelson-Siegel parameters
    let beta0 = 0.05;  // Long-term rate
    let beta1 = -0.02; // Short-term component
    let beta2 = 0.01;  // Medium-term component
    let tau = 2.0;     // Decay parameter
    
    let start = time_ns();
    
    // Generate yield curve points
    let i = 0;
    let sum = 0.0;
    while (i < n_points) {
        let t = (i + 1) * 0.1; // Time to maturity
        let yield_val = beta0 + beta1 * (1 - exp(-t/tau)) / (t/tau) + 
                       beta2 * ((1 - exp(-t/tau)) / (t/tau) - exp(-t/tau));
        sum = sum + yield_val;
        i = i + 1;
    }
    
    let end = time_ns();
    
    print("TASK=yield_curve,N=");
    print(n_points);
    print(",TIME_NS=");
    print_time_ns(end - start);
    print(",SUM=");
    print(sum);
    print("\n");
}

